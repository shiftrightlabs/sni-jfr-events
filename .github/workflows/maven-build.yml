name: Maven Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [17, 21]  # Test with multiple Java versions

    name: Build with Java ${{ matrix.java-version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'  # OpenJDK distribution
        cache: maven

    - name: Build with Maven
      run: mvn clean compile

    - name: Run tests
      run: mvn test

    - name: Package JAR
      run: mvn package

    - name: Verify agent JAR
      run: |
        echo "Checking if agent JAR was created..."
        ls -la target/
        if [ ! -f target/sni-jfr-agent-1.0.0.jar ]; then
          echo "Error: Agent JAR not found!"
          exit 1
        fi
        echo "Agent JAR created successfully"

    - name: Check JAR manifest
      run: |
        echo "Verifying JAR manifest for agent attributes..."
        unzip -p target/sni-jfr-agent-1.0.0.jar META-INF/MANIFEST.MF | grep -E "Premain-Class|Agent-Class"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      if: matrix.java-version == 17  # Only upload artifact from Java 17 build
      with:
        name: sni-jfr-agent
        path: target/sni-jfr-agent-*.jar
        retention-days: 30

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven

    - name: Run Maven Verify
      run: mvn clean verify

    - name: Check for compiler warnings
      run: mvn clean compile -Dmaven.compiler.showWarnings=true

  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Security Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven

    - name: Check for dependency updates
      run: mvn versions:display-dependency-updates

    - name: Analyze dependencies
      run: mvn dependency:analyze